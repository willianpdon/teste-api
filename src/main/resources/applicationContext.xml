<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd">
       
       
	<bean id="propertiesPlacholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="false">
		<property name="locations">
			<list>
				<value>classpath:database-desenv.properties</value>
			</list>
		</property>
	</bean>       
       
    <context:component-scan base-package="teste.api" />
    
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
    

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
    </bean>
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" /> 
	</bean>
		
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="${hibernate.url}" />
		<property name="user" value="${hibernate.username}" />
		<property name="password" value="${hibernate.password}" />
		<property name="minPoolSize" value="${hibernate.min.pool.size}" />
		<property name="maxPoolSize" value="${hibernate.max.pool.size}" />
		<property name="acquireIncrement" value="${hibernate.acquire.increment}" />
		<property name="idleConnectionTestPeriod" value="${hibernate.idle.connection.test.period}" />
		<property name="maxIdleTimeExcessConnections" value="${hibernate.max.idle.time.excess.connections}" />		
		<property name="testConnectionOnCheckin" value="${hibernate.test.connection.on.checkin}" />
		<property name="testConnectionOnCheckout" value="${hibernate.test.connection.on.checkout}" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="teste.api.domain" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.default_schema">sciensa</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<property name="maxUploadSize" value="10000000" />
	</bean>
	
	<beans>
	    <!-- Indica quais pacotes o Spring deve escanear em busca de componentes -->
	    <context:component-scan base-package="teste.api" />
	 
	    <!-- Permite ao spring identificar classe anotadas com @Controller -->
	    <mvc:annotation-driven enable-matrix-variables="true" />
	 
	    <!-- Habilita o swagger ui -->
	   <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
	 
	    <!-- Inclui uma configuração personalizada do swagger-->
	    <bean name="swagger2DocumentationConfiguration" class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration" />
	    
	    <!-- Bean para alterar as informações gerais da API. -->
	   <bean name="applicationSwaggerConfig" class="teste.api.configuracao.ApplicationSwaggerConfig"/>
	   
	   
	</beans>
	
</beans>